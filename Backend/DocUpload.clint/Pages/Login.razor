@page "/login"  
@using System.ComponentModel.DataAnnotations  
@inject AuthService AuthService  
@inject NavigationManager Navigation  

<div class="auth-container">  
    <h2>Login</h2>  
    <EditForm Model="@model" OnValidSubmit="@HandleLogin">  
        <DataAnnotationsValidator />  
        <ValidationSummary />  

        <div class="form-group">  
            <label>Email</label>  
            <InputText @bind-Value="model.Email" class="form-control" />  
            <ValidationMessage For="@(() => model.Email)" />  
        </div>  
        <div class="form-group">  
            <label>Password</label>  
            <InputText type="password" @bind-Value="model.Password" class="form-control" />  
            <ValidationMessage For="@(() => model.Password)" />  
        </div>  
        <button type="submit" class="btn btn-primary">Login</button>  
    </EditForm>  

    @if (errorMessage != null)  
    {  
        <div class="alert alert-danger mt-3">@errorMessage</div>  
    }  
</div>  

@code {  
    private LoginModel model = new();  
    private string errorMessage;  
   
        private async Task HandleLogin()
        {
            var result = await AuthService.Login(model.Email, model.Password);

            if (result.IsSuccess)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = result.Message ?? "Login failed";
                StateHasChanged(); // Refresh UI to show error
            }
        }
    

    public class LoginModel  
    {  
        [Required(ErrorMessage = "Email is required")]  
        [EmailAddress(ErrorMessage = "Invalid email address")]  
        public string Email { get; set; }  

        [Required(ErrorMessage = "Password is required")]  
        public string Password { get; set; }  
    }  
}